{"version":3,"sources":["images/apple.png","images/apricot.png","images/banana.png","images/blueberry.png","images/cherry.png","images/guava.png","images/lemon.png","images/mango.png","images/orange.png","images/pear.png","images/pineapple.png","images/raspberry.png","images/strawberry.png","images/tomato.png","images/watermelon.png","components/Modal.js","globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Background","styled","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","MdClose","fruitImages","apple","apricot","banana","blueberry","cherry","guava","lemon","mango","orange","pear","pineapple","raspberry","strawberry","tomato","watermelon","Modal","showModal","setShowModal","imageID","info","src","name","order","family","genus","nutritions","calories","carbohydrates","protein","fat","sugar","aria-label","onClick","prev","GlobalStyle","createGlobalStyle","Container","Header","h1","Button","button","Fruit","Grid","App","fruitVals","useState","setImageID","setInfo","retrieveData","a","fetch","response","json","data","openModal","event","parseInt","currentTarget","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bcff2a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/apple.c9c52f4b.png\";","export default __webpack_public_path__ + \"static/media/apricot.b50e6cf4.png\";","export default __webpack_public_path__ + \"static/media/banana.77ff416c.png\";","export default __webpack_public_path__ + \"static/media/blueberry.b1ca1bac.png\";","export default __webpack_public_path__ + \"static/media/cherry.0f312e11.png\";","export default __webpack_public_path__ + \"static/media/guava.eab1c2f3.png\";","export default __webpack_public_path__ + \"static/media/lemon.d7682422.png\";","export default __webpack_public_path__ + \"static/media/mango.fc9b6f3c.png\";","export default __webpack_public_path__ + \"static/media/orange.f9102c5c.png\";","export default __webpack_public_path__ + \"static/media/pear.3be61fd9.png\";","export default __webpack_public_path__ + \"static/media/pineapple.2859e8b7.png\";","export default __webpack_public_path__ + \"static/media/raspberry.b22091a8.png\";","export default __webpack_public_path__ + \"static/media/strawberry.496d507c.png\";","export default __webpack_public_path__ + \"static/media/tomato.57b87dae.png\";","export default __webpack_public_path__ + \"static/media/watermelon.b859c43a.png\";","import React from 'react';\nimport styled from 'styled-components'\nimport {MdClose} from 'react-icons/md'\nimport apple from '../images/apple.png'\nimport apricot from '../images/apricot.png'\nimport banana from '../images/banana.png'\nimport blueberry from '../images/blueberry.png'\nimport cherry from '../images/cherry.png'\nimport guava from '../images/guava.png'\nimport lemon from '../images/lemon.png'\nimport mango from '../images/mango.png'\nimport orange from '../images/orange.png'\nimport pear from '../images/pear.png'\nimport pineapple from '../images/pineapple.png'\nimport raspberry from '../images/raspberry.png'\nimport strawberry from '../images/strawberry.png'\nimport tomato from '../images/tomato.png'\nimport watermelon from '../images/watermelon.png'\n\nexport const media = {\n  small: '@media(max-width: 960px)'\n}\n\n\nconst Background = styled.div`\n  width: 100%;\n  height; 100%;\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ModalImg = styled.img`\n    width: 20em;\n    height: 20em;\n    object-fit: cover;\n    border-radius: 10px;\n    ${media.small} {\n      width: 13.5em;\n      height: 13.5em;\n      object-fit: cover;\n      border-radius: 10px;\n    }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst fruitImages = [apple, apricot, banana, blueberry, cherry, guava, lemon, mango, orange, pear, pineapple, raspberry, strawberry, tomato, watermelon];\n\nexport const Modal = ({showModal, setShowModal, imageID, info}) => {\n    return (\n        <>\n        {showModal ? (\n            <Background>\n                <ModalWrapper showModal={showModal}>\n                    <ModalImg src={fruitImages[imageID]}/>\n                    <ModalContent>\n                        <h1>{info.name}</h1>\n                        <p>Order: {info.order}</p>\n                        <p>Family: {info.family}</p>\n                        <p>Genus: {info.genus}</p> \n\n                        <h2>Nutrition Facts per 100 grams </h2>\n                        <ul>\n                            <li> {info.nutritions.calories} Calories </li>\n                            <li>{info.nutritions.carbohydrates} grams of Carbohydrates </li>\n                            <li>{info.nutritions.protein} grams of Protein </li>\n                            <li> {info.nutritions.fat} grams of Fat </li>\n                            <li> {info.nutritions.sugar} grams of Sugar </li>\n                        </ul>\n                        \n                    </ModalContent>\n                    <CloseModalButton aria-label='Close modal' onClick={() => setShowModal (prev => !prev)} />\n                </ModalWrapper> \n            </Background>\n        ) : null}\n        </>\n      )\n};\n","import {createGlobalStyle} from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: 'Arial', sans-serif;\n}\n`","import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport { Modal } from './components/Modal'\nimport { GlobalStyle } from './globalStyles'\nimport apple from './images/apple.png'\nimport apricot from './images/apricot.png'\nimport banana from './images/banana.png'\nimport blueberry from './images/blueberry.png'\nimport cherry from './images/cherry.png'\nimport guava from './images/guava.png'\nimport lemon from './images/lemon.png'\nimport mango from './images/mango.png'\nimport orange from './images/orange.png'\nimport pear from './images/pear.png'\nimport pineapple from './images/pineapple.png'\nimport raspberry from './images/raspberry.png'\nimport strawberry from './images/strawberry.png'\nimport tomato from './images/tomato.png'\nimport watermelon from './images/watermelon.png'\n\nexport const media = {\n    small: '@media(max-width: 960px)'\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100vh;\n  margin: 40px;\n  flex-direction: column;\n`\nconst Header = styled.h1`\n  font-family: 'Nunito', sans-serif;\n`\n\nconst Button = styled.button`\nborder-radius: 10px;\nborder: solid;\ncursor: pointer;\nposition: relative;\ndisplay: block;\nborder-width: thick;\n&:hover {\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.35);\n}\n`\n\nconst Fruit = styled.img`\nwidth: 21em;\nheight: 21em;\nobject-fit: cover;\ncursor: pointer;\nborder-radius: 10px;\nborder: none;\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-content: center;\n  grid-gap: 28px;\n  max-width: 960px;\n\n  ${media.small} {\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    justify-content: center;\n    grid-gap: 28px;\n    max-width: 960px;\n  }\n`\n\n\nfunction App() {\n  const fruitVals = ['apple', 'apricot', 'banana', 'blueberry', 'cherry', 'guava', 'lemon', 'mango', 'orange', 'pear', 'pineapple', 'raspberry', 'strawberry', 'tomato', 'watermelon'];\n  const [showModal, setShowModal] = useState(false);\n  const [imageID, setImageID] = useState(0);\n  const [info, setInfo] = useState({})\n\n  const retrieveData = async () => {\n    const response = await fetch(`https://pacific-scrubland-02722.herokuapp.com/https://fruityvice.com/api/fruit/${fruitVals[imageID]}`);\n    const data = await response.json();\n    setInfo(data);\n    setShowModal(prev=> !prev)\n  }\n\n  const openModal = (event) => {\n      setImageID(parseInt(event.currentTarget.id));\n      retrieveData()\n    };\n\n\n  return (\n    <>\n    <Container>\n      <Header>FRUIT GALLERY</Header>\n      <Grid>\n        <Button id=\"0\" onClick={openModal}> <Fruit src={apple}/></Button> \n        <Button id=\"1\" onClick={openModal}> <Fruit src={apricot}/></Button>\n        <Button id=\"2\" onClick={openModal}> <Fruit src={banana}/></Button>\n        <Button id=\"3\" onClick={openModal}> <Fruit src={blueberry}/></Button> \n        <Button id=\"4\" onClick={openModal}> <Fruit src={cherry}/></Button>\n        <Button id=\"5\" onClick={openModal}> <Fruit src={guava}/></Button>\n        <Button id=\"6\" onClick={openModal}> <Fruit src={lemon}/></Button> \n        <Button id=\"7\" onClick={openModal}> <Fruit src={mango}/></Button>\n        <Button id=\"8\" onClick={openModal}> <Fruit src={orange}/></Button>\n        <Button id=\"9\" onClick={openModal}> <Fruit src={pear}/></Button> \n        <Button id=\"10\" onClick={openModal}> <Fruit src={pineapple}/></Button>\n        <Button id=\"11\" onClick={openModal}> <Fruit src={raspberry}/></Button>\n        <Button id=\"12\" onClick={openModal}> <Fruit src={strawberry}/></Button>\n        <Button id=\"13\" onClick={openModal}> <Fruit src={tomato}/></Button>\n        <Button id=\"14\" onClick={openModal}> <Fruit src={watermelon}/></Button>\n      </Grid>\n      <Modal showModal={showModal} setShowModal={setShowModal} imageID={imageID} info={info}/>\n      <GlobalStyle />\n    </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}