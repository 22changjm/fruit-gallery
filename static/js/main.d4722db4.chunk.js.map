{"version":3,"sources":["Images.js","components/Modal.js","globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Background","styled","div","ModalWrapper","ModalImg","img","ModalContent","CloseModalButton","MdClose","fruitVals","Modal","showModal","setShowModal","imageID","info","src","Images","order","family","genus","nutritions","calories","carbohydrates","protein","fat","sugar","aria-label","onClick","prev","GlobalStyle","createGlobalStyle","Container","Header","h1","Button","button","Fruit","Grid","App","useState","setImageID","setInfo","retrieveData","a","fetch","response","json","data","openModal","event","parseInt","currentTarget","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4722db4.chunk.js","sourcesContent":["export default [\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/apple.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/apricot.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/banana.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/blueberry.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/cherry.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/guava.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/lemon.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/mango.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/orange.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/pear.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/pineapple.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/raspberry.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/strawberry.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/tomato.png\",\n    \"https://passport-media.s3-us-west-1.amazonaws.com/images/eng-intern-interview/watermelon.png\"\n  ];","import React from 'react';\nimport styled from 'styled-components'\nimport {MdClose} from 'react-icons/md'\nimport Images from '../Images'\n\nexport const media = {\n  small: '@media(max-width: 960px)'\n}\n\n\nconst Background = styled.div`\n  width: 100%;\n  height; 100%;\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ModalImg = styled.img`\n    width: 20em;\n    height: 20em;\n    object-fit: cover;\n    border-radius: 10px;\n    ${media.small} {\n      width: 13.5em;\n      height: 13.5em;\n      object-fit: cover;\n      border-radius: 10px;\n    }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n  h2 {\n    text-align: center;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst fruitVals = ['Apple', 'Apricot', 'Banana', 'Blueberry', 'Cherry', 'Guava', 'Lemon', 'Mango', 'Orange', 'Pear', 'Pineapple', 'Raspberry', 'Strawberry', 'Tomato', 'Watermelon'];\n\nexport const Modal = ({showModal, setShowModal, imageID, info}) => {\n    return (\n        <>\n        {showModal ? (\n            <Background>\n                <ModalWrapper showModal={showModal}>\n                    <ModalImg src={Images[imageID]}/>\n                    <ModalContent>\n                        <h1>{fruitVals[imageID]}</h1>\n                        <p>Order: {info.order}</p>\n                        <p>Family: {info.family}</p>\n                        <p>Genus: {info.genus}</p> \n\n                        <h2>Nutrition Facts per 100 grams </h2>\n                        <ul>\n                            <li> {info.nutritions.calories} Calories </li>\n                            <li>{info.nutritions.carbohydrates} grams of Carbohydrates </li>\n                            <li>{info.nutritions.protein} grams of Protein </li>\n                            <li> {info.nutritions.fat} grams of Fat </li>\n                            <li> {info.nutritions.sugar} grams of Sugar </li>\n                        </ul>\n                        \n                    </ModalContent>\n                    <CloseModalButton aria-label='Close modal' onClick={() => setShowModal (prev => !prev)} />\n                </ModalWrapper> \n            </Background>\n        ) : null}\n        </>\n      )\n};\n","import {createGlobalStyle} from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: 'Arial', sans-serif;\n}\n`","import Images from './Images'\nimport React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport { Modal } from './components/Modal'\nimport { GlobalStyle } from './globalStyles'\nimport { MdSystemUpdate } from 'react-icons/md'\n\nexport const media = {\n    small: '@media(max-width: 960px)'\n}\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100vh;\n  margin: 40px;\n  flex-direction: column;\n`\nconst Header = styled.h1`\n  font-family: 'Nunito', sans-serif;\n`\n\nconst Button = styled.button`\nborder-radius: 10px;\nborder: solid;\ncursor: pointer;\nposition: relative;\ndisplay: block;\nborder-width: thick;\n&:hover {\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.35);\n}\n`\n\nconst Fruit = styled.img`\nwidth: 21em;\nheight: 21em;\nobject-fit: cover;\ncursor: pointer;\nborder-radius: 10px;\nborder: none;\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-content: center;\n  grid-gap: 28px;\n  max-width: 960px;\n\n  ${media.small} {\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    justify-content: center;\n    grid-gap: 28px;\n    max-width: 960px;\n  }\n`\n\n\nfunction App() {\n  const fruitVals = ['Apple', 'Apricot', 'Banana', 'Blueberry', 'Cherry', 'Guava', 'Lemon', 'Mango', 'Orange', 'Pear', 'Pineapple', 'Raspberry', 'Strawberry', 'Tomato', 'Watermelon'];\n  const [showModal, setShowModal] = useState(false);\n  const [imageID, setImageID] = useState(0);\n  const [info, setInfo] = useState({})\n\n  const retrieveData = async () => {\n    const response = await fetch(`https://pacific-scrubland-02722.herokuapp.com/https://fruityvice.com/api/fruit/${fruitVals[imageID]}`);\n    const data = await response.json();\n    setInfo(data);\n    setShowModal(prev=> !prev)\n  }\n\n  const openModal = (event) => {\n      setImageID(parseInt(event.currentTarget.id));\n      retrieveData()\n    };\n\n\n  return (\n    <>\n    <Container>\n      <Header>FRUIT GALLERY</Header>\n      <Grid>\n        <Button id=\"0\" onClick={openModal}> <Fruit src={Images[0]}/></Button> \n        <Button id=\"1\" onClick={openModal}> <Fruit src={Images[1]}/></Button>\n        <Button id=\"2\" onClick={openModal}> <Fruit src={Images[2]}/></Button>\n        <Button id=\"3\" onClick={openModal}> <Fruit src={Images[3]}/></Button> \n        <Button id=\"4\" onClick={openModal}> <Fruit src={Images[4]}/></Button>\n        <Button id=\"5\" onClick={openModal}> <Fruit src={Images[5]}/></Button>\n        <Button id=\"6\" onClick={openModal}> <Fruit src={Images[6]}/></Button> \n        <Button id=\"7\" onClick={openModal}> <Fruit src={Images[7]}/></Button>\n        <Button id=\"8\" onClick={openModal}> <Fruit src={Images[8]}/></Button>\n        <Button id=\"9\" onClick={openModal}> <Fruit src={Images[9]}/></Button> \n        <Button id=\"10\" onClick={openModal}> <Fruit src={Images[10]}/></Button>\n        <Button id=\"11\" onClick={openModal}> <Fruit src={Images[11]}/></Button>\n      </Grid>\n      <Modal showModal={showModal} setShowModal={setShowModal} imageID={imageID} info={info}/>\n      <GlobalStyle />\n    </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}